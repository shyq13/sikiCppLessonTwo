// 类作用域和友元函数

// 类作用域

// 什么是类作用域？
// 每个类都会定义它自己的作用域
// 在类的作用域之外，普通的数据和函数成员只能由对象，
// 引用或者指针使用成员访问运算符来访问
// 对象调用：直接成员运算符(.)
// 指针调用：间接成员运算符(->)
// 在类的外部定义成员函数时，必须同时提供类名和函数名：
// int Student::sum(Student& s) {
// }
// · 注意：
// 不能直接在类的声明中直接通过const来声明一个常量，
// 这是因为声明类只描述了对象的形式，并没有创建对象
// 因此，在创建对象前，将没有用于存储值的空间

// 那如何声明常量呢？
// 有两个方法：
// 1. 在类里面声明一个枚举类型：
// enum { passScore = 60 };
// 2. 在类里面声明一个静态变量：
// static const int passScore = 60;


// 友元函数

// 什么是友元函数？
// 类可以允许其他类或者函数访问它的私有成员，
// 方法是令其他类或者函数成为它的友元(friend)
// 如果类想把一个函数作为它的友元，只需要增加一条以friend关键字开始的函数声明语句即可：
// friend void printMath(Student& s);
// 注意：友元函数不是类的成员函数，友元函数不能直接访问类的成员，只能通过对象访问