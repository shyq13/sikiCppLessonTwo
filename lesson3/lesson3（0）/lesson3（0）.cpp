#include <iostream>
// 运行该项目时一定要将它设为启动项！！！
// 运行该项目时一定要将它设为启动项！！！
// 运行该项目时一定要将它设为启动项！！！
using namespace std;

inline int sum(int a, int b);   // 使用inline关键字后，sum函数就变成了内联函数
inline int sum1(int a, int b) {
	return a + b;
}       // 也可以像这样定义内联函数

int main() {
	// 内联函数
	
	// 什么是内联函数？
	// 内联函数是C++为提高程序运行速度所做的一项改进
	// 内联函数的编译代码与其他程序代码“内联”起来了，
	// 也就是说，编译器将使用相应的函数代码替代函数调用
	// 对于内联代码，程序无需跳到另一个位置处执行代码，再跳回来
	// 因此，内联函数的运行速度比常规函数稍快，但代价是需要占用更多内存

	// 内联函数的定义
	// 直接在函数定义或原型前加上inline关键字进行标记
	// 或者将原型省略，将函数定义放在本应该进行函数原型的地方
	// 注意！
	// 内联函数不能进行递归

	// 详见sum、sum1函数

	int a, b;
	a = 10;
	b = 20;
	cout << a << " + " << b << " = " << sum(a, b) << endl;

	cout << a << " + " << b << " = " << sum1(a, b) << endl;

	
    return 0;
}

int sum(int a, int b) {
	return a + b;
}